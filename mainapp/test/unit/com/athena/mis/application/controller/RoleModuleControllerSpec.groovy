package com.athena.mis.application.controller

import com.athena.mis.BaseService
import com.athena.mis.application.actions.rolemodule.CreateRoleModuleActionService
import com.athena.mis.application.actions.rolemodule.DeleteRoleModuleActionService
import com.athena.mis.application.actions.rolemodule.ListRoleModuleActionService
import com.athena.mis.application.actions.rolemodule.ShowRoleModuleActionService
import com.athena.mis.application.actions.rolemodule.UpdateRoleModuleActionService
import com.athena.mis.application.entity.AppUser
import com.athena.mis.application.entity.Role
import com.athena.mis.application.entity.RoleModule
import com.athena.mis.application.model.ListRoleModuleActionServiceModel
import com.athena.mis.application.service.AppMyFavouriteService
import com.athena.mis.application.service.ListRoleModuleActionServiceModelService
import com.athena.mis.application.service.RoleModuleService
import com.athena.mis.application.service.RoleService
import com.athena.mis.application.session.AppSessionService
import grails.test.mixin.Mock
import grails.test.mixin.TestFor
import spock.lang.Specification

/**
 * Created by Asif on 12/28/2015.
 */

@TestFor(RoleModuleController)

@Mock([
        Role,
        RoleService,
        RoleModule,
        RoleModuleService,
        AppMyFavouriteService,
        CreateRoleModuleActionService,
        DeleteRoleModuleActionService,
        ListRoleModuleActionService,
        ListRoleModuleActionServiceModel,
        ListRoleModuleActionServiceModelService,
        ShowRoleModuleActionService,
        UpdateRoleModuleActionService,
        BaseService,
        AppSessionService

])

class RoleModuleControllerSpec extends Specification{

    void setup(){
        AppUser appUser = new AppUser()
        appUser.id = 1

        controller.createRoleModuleActionService.appSessionService.setAppUser(appUser)
        controller.deleteRoleModuleActionService.appSessionService.setAppUser(appUser)
        controller.listRoleModuleActionService.appSessionService.setAppUser(appUser)
        controller.showRoleModuleActionService.appSessionService.setAppUser(appUser)
        controller.updateRoleModuleActionService.appSessionService.setAppUser(appUser)

    }

    def 'Show RoleModule' (){

        when:
        request.method = "POST"
        controller.show()

        then:
        view == "/application/roleModule/show"
    }

    def 'Create RoleModule'(){
        setup:

        Role role = new Role(
                version : 0,
                authority : "ROLE_4_1",
                name : "Test Role",
                companyId : 1,
                roleTypeId : 0,
                createdBy : 1,
                createdOn : new Date(),
                updatedBy : 1,
                updatedOn : new Date(),
                pluginId : 1,
                isReseller : false
        )
        role.id = 4
        role.save(flush: true)

        controller.params.id  = 1           // object id (primary key - auto generated by own id_seq)
        controller.params.roleId = role.id	    // Role.id
        controller.params.moduleId  = 1     // moduleId
        controller.params.companyId	= 1	// Company.id

        when:
        request.method = 'POST'
        controller.create()

        then:
        response.redirectedUrl == null
        response.json.message == "Role module mapping has been successfully saved"
        response.json.isError == false
    }

    def 'Update RoleModule'(){
        setup:

        Role role = new Role(
                version : 0,
                authority : "ROLE_4_1",
                name : "Test Role",
                companyId : 1,
                roleTypeId : 0,
                createdBy : 1,
                createdOn : new Date(),
                updatedBy : 1,
                updatedOn : new Date(),
                pluginId : 1,
                isReseller : false
        )
        role.id = 4
        role.save(flush: true)

        RoleModule rm = new RoleModule(
                id  : 1,           // object id (primary key - auto generated by own id_seq)
                roleId : role.id,	    // Role.id
                moduleId  : 1     // moduleId
        )
        rm.id = 4
        rm.save(flush: true)

        controller.params.id = rm.id
        controller.params.moduleId = rm.moduleId

        when:
        request.method = 'POST'
        controller.update()

        then:
        response.redirectUrl == null
        response.json.message == "Role module mapping has been successfully updated"
        response.json.isError == false
    }

    def 'List RoleModule' () {
        setup:

        controller.params.page = 1
        controller.params.pageSize = 10
        controller.params."sort[0]['dir']" = 'asc'
        controller.params."sort[0]['field']" = 'name'
        controller.params.take = 10
        controller.params.skip = 0
        controller.params.roleId = 1

        when:
        request.method = 'POST'
        controller.list()

        then:
        response.json.isError == false
        response.json.count >= 0
    }

//    def 'DropDown Role Module Reload'(){
//
//    }
}
