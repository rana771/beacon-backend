package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> Contains transaction history of data transfer, data import and benchmark
 * TransactionLog has association with few other domains as listed below.
 * </p>
 *
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link com.athena.mis.application.entity.SystemEntity#id as entityTypeId}</li>
 * </ul>
 *
 */
class TransactionLog {
    long id                 // primary key (Auto generated by its own sequence)
    long sequence           // sequence number of transaction log corresponding entity
    long entityTypeId       // SystemEntity.id
    long entityId           // id of corresponding entity i.e DocDataTransfer.id, DocDataImport.id, Benchmark.id etc
    long totalRecord        // count of total inserted record
    int recordPerBatch      // count of record per batch
    long timeToRead         // record reading time of batch or file
    long timeToWrite        // record writing time of batch or file
    long processingTime     // record processing time of batch or file
    long startTime          // execution start time in millisecond
    long endTime            // execution end time in millisecond
    String tableName        // table name for data transfer or import
    String exception        // message if any exception occur
    String comment          // any comment
    long companyId          // Company.id
    Date createdOn          // Object created DateTime

    static mapping = {
        id generator: 'sequence', params: [sequence: 'transaction_log_id_seq']
        companyId index: 'transaction_log_company_id_idx'
        entityTypeId index: 'transaction_log_entity_type_id_idx'
        entityId index: 'transaction_log_entity_id_idx'
        tableName index: 'transaction_log_table_name_idx'
        version false
    }
    static constraints = {
        tableName(nullable: true)
        exception(nullable: true)
        comment(nullable: true)
    }
}
