package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> ItemType determines the type of Item.
 * ItemType has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Foreign Reference:</strong> Other domain, which has foreign key reference of ItemType:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.Item#itemTypeId}</li>
 *     <li>{@link com.athena.mis.budget.entity.BudgSchema#itemTypeId}</li>
 * </ul>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as createdBy}</li>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link com.athena.mis.application.entity.SystemEntity#id as categoryId}</li>
 * </ul>
 *
 */
class ItemType {

    public static final String DEFAULT_SORT_FIELD = "name"

    long id              // primary key (Auto generated by its own sequence)
    long version          // entity version in the persistence layer
    String name          // Unique name within a company
    long categoryId      // SystemEntity.id (Inventory, NonInventory, FixedAsset)
    Date createdOn       // Object creation DateTime
    long createdBy       // AppUser.id
    Date updatedOn       // Object updated DateTime
    long updatedBy       // AppUser.id
    long companyId       // Company.id

    static mapping = {
        id generator: 'sequence', params: [sequence: 'item_type_id_seq']

        categoryId index: 'item_type_category_id_idx'
        createdBy index: 'item_type_created_by_idx'
        updatedBy index: 'item_type_updated_by_idx'
        companyId index: 'item_type_company_id_idx'

        // unique index on "name" using ItemTypeService.createDefaultSchema()
        // <domain_name><property_name_1>idx
    }

    static constraints = {
        name(nullable: false)
        categoryId(nullable: false)
        createdOn(nullable: false)
        createdBy(nullable: false)
        updatedOn(nullable: true)
        updatedBy(nullable: false)
        companyId(nullable: false)
    }
}