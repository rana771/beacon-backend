package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> Determines the category of uploaded file (Photo, Signature, Logo, Document etc).
 * ContentCategory has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Foreign Reference:</strong> Other domain, which has foreign key reference of ContentCategory:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppAttachment#contentCategoryId}</li>
 * </ul>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as createdBy}</li>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link com.athena.mis.application.entity.SystemEntity#id as contentTypeId}</li>
 * </ul>
 *
 */
class ContentCategory {

    public static final String DEFAULT_SORT_FIELD = "name"

    long id                         // primary key (Auto generated by its own sequence)
    long version                     // entity version in the persistence layer
    String name                     // unique for content type -- Content Category Name(Signature, Image, PhotoId, Drawing, Archive etc.)
    long contentTypeId              // SystemEntity.id (Document, Image)
    String systemContentCategory    // if not reserved then id; if reserved then specific data (PHOTO, LOGO etc)
    long maxSize                    // Maximum file size (e.g : 1024*1024*1, 1024*1024*5 etc.)
    int width                       // width of the Content(e.g : 512 etc.)
    int height                      // height of the Content(e.g : 1024 etc.)
    String extension        /* Coma separated Extension of the content (e.g : doc, excel, pdf, png, jpeg, gif etc)
                               If extension is defined then Content should be exactly as declared,
                               Otherwise Content could be any type like doc, xls, pdf, png, jpeg, gif etc.
                            */

    Date createdOn       // Object created DateTime
    long createdBy       // AppUser.id
    Date updatedOn       // Object updated DateTime
    long updatedBy       // AppUser.id
    long companyId       // Company.id
    boolean isReserved   // flag for reserved

    static constraints = {
        name(nullable: false)
        contentTypeId(nullable: false)
        systemContentCategory(nullable: false)
        maxSize(nullable: false)
        width(nullable: false)
        height(nullable: false)
        extension(nullable: true)
        createdBy(nullable: false)
        createdOn(nullable: false)
        updatedBy(nullable: false)
        updatedOn(nullable: true)
        companyId(nullable: false)
        isReserved(nullable: false)
    }

    static mapping = {
        id generator: 'sequence', params: [sequence: 'content_category_id_seq']
        contentTypeId index: 'content_category_content_type_id_idx'
        createdBy index: 'content_category_created_by_idx'
        updatedBy index: 'content_category_updated_by_idx'
        companyId index: 'content_category_company_id_idx'

        // unique index on "name" ,"content_type_id" and "system_content_category" using ContentCategoryService.createDefaultSchema()
        // <domain_name><property_name_1><property_name_2><property_name_3>idx
    }
}