package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> Contains AppTheme object data for a Company.
 * AppTheme has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 * </ul>
 *
 */
class AppTheme {

    public static final String DEFAULT_SORT_FIELD = "key"

    long id             // primary key (Auto generated by its own sequence)
    long version        // entity version in the persistence layer
    String key          // Unique key within a company
    String value        // value of AppTheme
    String description  // description of the theme
    Date updatedOn      // Object updated DateTime
    long updatedBy      // AppUser.id
    long companyId      // Company.id
    int pluginId                // plugin id (Application=1, Accounting=2 etc.)

    static constraints = {
        key(nullable: false)
        value(nullable: false, maxSize: 15359)
        description(nullable: true, maxSize: 1000)
        companyId(nullable: false)
        updatedOn(nullable: true)
        pluginId(nullable: false)
        updatedBy(nullable: false)
    }

    static mapping = {
        id generator: 'sequence', params: [sequence: 'theme_id_seq']
        updatedOn type: 'date'
        updatedBy index: 'app_theme_updated_by_idx'
        companyId index: 'app_theme_company_id_idx'

        // unique index on "key" using AppThemeService.createDefaultSchema()
        // <domain_name><property_name_1>idx
    }

    public String getValue() {
        return value.length() > 15359 ? value.substring(0, 15358) : value
    }
}
