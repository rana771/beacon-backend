package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> One or more BankBranch exists under a certain Bank.
 * Bank has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Foreign Reference:</strong> Other domain, which has foreign key reference of Bank:</p>
 * <ul>
 *     <li>{@link AppBankBranch#bankId}</li>
 *     <li>{@link com.athena.mis.arms.entity.RmsPurchaseInstrumentMapping#bankId}</li>
 *     <li>{@link com.athena.mis.arms.entity.RmsTask#mappingBankId}</li>
 *     <li>{@link com.athena.mis.exchangehouse.entity.ExhTask#outletBankId}</li>
 *     <li>{@link com.athena.mis.sarb.entity.SarbCurrencyConversion#bankId}</li>
 * </ul>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as createdBy}</li>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link AppCountry#id as countryId}</li>
 * </ul>
 *
 */
class AppBank {

    public static final String DEFAULT_SORT_FIELD = "name"

    long id               // primary key (Auto generated by its own sequence)
    long version          // entity version in the persistence layer
    String name           // Unique code within a company
    String code           // Unique code within a company
    long companyId        // Company.id
    boolean isSystemBank  // flag for system bank
    long countryId        // AppCountry.id
    long createdBy        // AppUser.id
    Date createdOn        // Object creation DateTime
    long updatedBy        // AppUser.id
    Date updatedOn        // Object Updated DateTime

    static mapping = {
        id generator: 'sequence', params: [sequence: 'app_bank_id_seq']
        createdBy index: 'app_bank_created_by_idx'
        updatedBy index: 'app_bank_updated_by_idx'
        companyId index: 'app_bank_company_id_idx'

        // unique index on "name" and "country_id" using AppBankService.createDefaultSchema()
        // unique index on "code" and "country_id" using AppBankService.createDefaultSchema()
        // <domain_name><property_name_1><property_name_2><property_name_3>idx
    }

    static constraints = {
        name(nullable: false)
        code(nullable: false)
        companyId(nullable: false)
        createdBy(nullable: false)
        createdOn(nullable: false)
        updatedBy(nullable: false)
        updatedOn(nullable: true)
    }

    public String toString() {
        return name
    }
}
