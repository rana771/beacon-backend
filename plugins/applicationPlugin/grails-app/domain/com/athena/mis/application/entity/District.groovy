package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> One or more BankBranch exists under a certain District.
 * District has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Foreign Reference:</strong> Other domain, which has foreign key reference of District:</p>
 * <ul>
 *     <li>{@link AppBankBranch#districtId}</li>
 *     <li>{@link com.athena.mis.arms.entity.RmsPurchaseInstrumentMapping#districtId}</li>
 *     <li>{@link com.athena.mis.arms.entity.RmsTask#mappingDistrictId}</li>
 *     <li>{@link com.athena.mis.exchangehouse.entity.ExhTask#outletDistrictId}</li>
 * </ul>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as createdBy}</li>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link AppCountry#id as countryId}</li>
 * </ul>
 *
 */
class District {

    public static final String DEFAULT_SORT_FIELD = "name"

    long id             // primary key (Auto generated by its own sequence)
    long version         // entity version in the persistence layer
    String name         // Unique name within a company
    long companyId      // Company.id
    boolean isGlobal    // flag for global District (for ARMS plugin)
    long countryId      // AppCountry.id
    long createdBy      // AppUser.id
    Date createdOn      // Object creation DateTime
    long updatedBy      // AppUser.id
    Date updatedOn      // Object Updated DateTime

    static mapping = {
        id generator: 'sequence', params: [sequence: 'district_id_seq']
        createdBy index: 'district_created_by_idx'
        updatedBy index: 'district_updated_by_idx'
        companyId index: 'district_company_id_idx'

        // unique index on "name" and "country_id" using DistrictService.createDefaultSchema()
        // <domain_name><property_name_1><property_name_2>idx
    }

    static constraints = {
        name(nullable: false)
        companyId(nullable: false)
        isGlobal(nullable: true)
        createdBy(nullable: false)
        createdOn(nullable: false)
        updatedBy(nullable: false)
        updatedOn(nullable: true)
    }

    public String toString() {
        return name
    }
}
