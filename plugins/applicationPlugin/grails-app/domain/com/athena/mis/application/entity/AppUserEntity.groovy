package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> Contains AppUser mapping relation with entity (Project, PtProject, InvInventory etc).
 * AppUserEntity has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as appUserId}</li>
 *     <li>{@link com.athena.mis.application.entity.SystemEntity#id as entityTypeId}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link AppBankBranch#id as entityId}</li>
 *     <li>{@link com.athena.mis.application.entity.Project#id as entityId}</li>
 *     <li>{@link com.athena.mis.application.entity.AppGroup#id as entityId}</li>
 *     <li>{@link com.athena.mis.projecttrack.entity.PtProject#id as entityId}</li>
 *     <li>{@link com.athena.mis.inventory.entity.InvInventory#id as entityId}</li>
 *     <li>{@link com.athena.mis.exchangehouse.entity.ExhAgent#id as entityId}</li>
 *     <li>{@link com.athena.mis.exchangehouse.entity.ExhCustomer#id as entityId}</li>
 *     <li>{@link com.athena.mis.arms.entity.RmsExchangeHouse#id as entityId}</li>
 * </ul>
 *
 */
class AppUserEntity {
    long id                         // primary key (Auto generated by its own sequence)
    long appUserId                  // AppUser.id
    long entityTypeId               // SystemEntity.id (e.g. Project, Inventory, Customer etc)
    long entityId                   // id of corresponding entity (e.g. Project.id, Inventory.id)
    long companyId                  // Company.id

    static constraints = {
        appUserId(nullable: false)
        entityTypeId(nullable: false)
        entityId(nullable: false)
        companyId(nullable: false)
    }

    static mapping = {
        id generator: 'sequence', params: [sequence: 'app_user_entity_id_seq']
        version false
        appUserId index: 'app_user_entity_app_user_id_idx'
        entityTypeId index: 'app_user_entity_entity_type_id_idx'
        entityId index: 'app_user_entity_entity_id_idx'
        companyId index: 'app_user_entity_company_id_idx'

        // unique index on "app_user_id","entity_id"  and "entity_type_id" using AppUserEntityService.createDefaultSchema()
        // <domain_name><property_name_1><property_name_2><property_name_3>idx
    }
}
