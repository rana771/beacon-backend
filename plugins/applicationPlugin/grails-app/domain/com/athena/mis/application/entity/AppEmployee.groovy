package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> AccIouSlip is issued for an Employee, given as a Source in AccVoucher, mapped with AppUser.
 * Employee has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Foreign Reference:</strong> Other domain, which has foreign key reference of Employee:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#employeeId (optional)}</li>
 *     <li>{@link com.athena.mis.accounting.entity.AccVoucherDetails#sourceId}</li>
 *     <li>{@link com.athena.mis.accounting.entity.AccCancelledVoucherDetails#sourceId}</li>
 *     <li>{@link com.athena.mis.accounting.entity.AccIouSlip#employeeId}</li>
 * </ul>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as createdBy}</li>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 *     <li>{@link AppDesignation#id as designationId}</li>
 * </ul>
 *
 */
class AppEmployee {

    public static final String DEFAULT_SORT_FIELD = "fullName"
    // Delete query for deleting test data of employee domain
    public static final String DELETE_TEST_DATA_QUERY = """ DELETE FROM app_employee WHERE id < 0 and company_id = :companyId  """

    long id                 // primary key (Auto generated by its own sequence)
    long version            // entity version in the persistence layer
    long companyId          // Company.id
    String fullName         // Full Name of Employee
    String nickName         // Nick Name of Employee
    String mobileNo         // Employee's phone no
    String email            // Employee's email address
    Date dateOfBirth        // Employee's date of birth
    String address          // Employee's address
    Date dateOfJoin         // Employee's date of Joining
    long createdBy          // AppUser.id
    Date createdOn          // Object creation DateTime
    long updatedBy          // AppUser.id
    Date updatedOn          // Object updated DateTime
    long designationId      // AppDesignation.Id

    static mapping = {
        id generator: 'sequence', params: [sequence: 'app_employee_id_seq']
        dateOfBirth type: 'date'
        dateOfJoin type: 'date'
        createdBy index: 'app_employee_created_by_idx'
        updatedBy index: 'app_employee_updated_by_idx'
        companyId index: 'app_employee_company_id_idx'
        designationId index: 'app_employee_designation_id_idx'
    }

    static constraints = {
        mobileNo(nullable: true)
        email(nullable: true)
        updatedOn(nullable: true)
        address(nullable: true)
        companyId(nullable: false)
        designationId(nullable: false)
        dateOfBirth(nullable: true)
    }

    public String toString() {
        return this.fullName
    }

    public String getAddress() {
        return address && address.length() > 255 ? address.substring(0, 254) : address
    }
}
