package com.athena.mis.application.entity

/**
 * <p>
 * <strong>Module:</strong> Application </br>
 * <strong>Purpose:</strong> Determines the designation of an Employee, used as a Source Category in AccChartOfAccount.
 * Designation has association with few other domains as listed below.
 * </p>
 *
 * <p><strong>Foreign Reference:</strong> Other domain, which has foreign key reference of AppEmployee:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppEmployee#designationId}</li>
 *     <li>{@link com.athena.mis.accounting.entity.AccChartOfAccount#sourceCategoryId}</li>
 * </ul>
 *
 * <p><strong>Local Reference:</strong> Has-a relationship with other domains:</p>
 * <ul>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as createdBy}</li>
 *     <li>{@link com.athena.mis.application.entity.AppUser#id as updatedBy}</li>
 *     <li>{@link com.athena.mis.application.entity.Company#id as companyId}</li>
 * </ul>
 *
 */
class AppDesignation {

    public static final String DEFAULT_SORT_FIELD = "name"
    // Delete query for deleting test data of designation domain
    public static final String DELETE_TEST_DATA_QUERY = """ DELETE FROM app_designation WHERE id < 0 and company_id = :companyId """

    long id                 // primary key (Auto generated by its own sequence)
    long version            // entity version in the persistence layer
    long companyId          // Company.id
    String name             // name of Designation
    String shortName        // shortName or Designation
    long createdBy          // AppUser.id
    Date createdOn          // Object creation DateTime
    long updatedBy          // AppUser.id
    Date updatedOn          // Object Updated DateTime

    static mapping = {
        id generator: 'sequence', params: [sequence: 'app_designation_id_seq']
        createdBy index: 'app_designation_created_by_idx'
        updatedBy index: 'app_designation_updated_by_idx'
        companyId index: 'app_designation_company_id_idx'

        // unique index on "name" using AppDesignationService.createDefaultSchema()
        // unique index on "short_name" using AppDesignationService.createDefaultSchema()
        // <domain_name><property_name_1>idx
    }

    static constraints = {
        companyId(nullable: false)
        name(nullable: false)
        shortName(nullable: false)
        createdBy(nullable: false)
        createdOn(nullable: false)
        updatedBy(nullable: false)
        updatedOn(nullable: true)
    }
}
